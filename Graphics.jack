/** Implement graphics of the game's object */
/** Purpose is to draw out one of all objects */

class Graphics {

    static int SCREEN_BASE_ADDRESS;

    /** Initialize static variable */
    function void init() {
        let SCREEN_BASE_ADDRESS = 16384;
        return;
    }

    /** Draws a single object with x, y coordinates & Array bitmap */
    function void drawObject(int xCoordinate, int yCoordinate, Array bitmap) {
        // x, y coordinates are of top left corner in 16*16 bit object
        var int memOffset;
        var int memAddress;

        let memAddress = SCREEN_BASE_ADDRESS + (32 * yCoordinate) + Math.divide(xCoordinate, 16);
            let memOffset = 0;

            while(memOffset < 16) {
                do Memory.poke(memAddress + (memOffset * 32), bitmap[memOffset]);
                let memOffset = memOffset + 1;
            }
        return;
    }

        /** Draws white Among us */
    method void drawWhitePlayer(int xCoordinate, int yCoordinate) {
        var int memAddress; 
        let memAddress = SCREEN_BASE_ADDRESS + (32 * y) + Math.divide(x, 16);
        do Memory.poke(memAddress +0, 0);
        do Memory.poke(memAddress +32, 3968);
        do Memory.poke(memAddress +64, 4192);
        do Memory.poke(memAddress +96, 15888);
        do Memory.poke(memAddress +128, 8464);
        do Memory.poke(memAddress +160, 16540);
        do Memory.poke(memAddress +192, 16530);
        do Memory.poke(memAddress +224, 8466);
        do Memory.poke(memAddress +256, 15890);
        do Memory.poke(memAddress +288, 8210);
        do Memory.poke(memAddress +320, 8210);
        do Memory.poke(memAddress +352, 8220);
        do Memory.poke(memAddress +384, 10000);
        do Memory.poke(memAddress +416, 9360);
        do Memory.poke(memAddress +448, 6240);
        do Memory.poke(memAddress +480, 0);
        return;
    }

        /** Draws Black Among us */
    method void drawBlackPlayer(int xCoordinate, int yCoordinate) {
        var int memAddress; 
        let memAddress = SCREEN_BASE_ADDRESS + (32 * y) + Math.divide(x, 16);
        do Memory.poke(memAddress +0, -1);
        do Memory.poke(memAddress +32, -3969);
        do Memory.poke(memAddress +64, -4193);
        do Memory.poke(memAddress +96, -15889);
        do Memory.poke(memAddress +128, -8465);
        do Memory.poke(memAddress +160, -16541);
        do Memory.poke(memAddress +192, -16531);
        do Memory.poke(memAddress +224, -8467);
        do Memory.poke(memAddress +256, -15891);
        do Memory.poke(memAddress +288, -8211);
        do Memory.poke(memAddress +320, -8211);
        do Memory.poke(memAddress +352, -8221);
        do Memory.poke(memAddress +384, -10001);
        do Memory.poke(memAddress +416, -9361);
        do Memory.poke(memAddress +448, -6241);
        do Memory.poke(memAddress +480, -1);
        return;
    }

        /** Difference between Terrain and Immovable */
        /** Terrain appears at edge of map */
        /** Immovable appears in middle of map */
        /** Both work in same logic */

        /** Draws White Terrain */
    method void drawWhiteTerrain(int xCoordinate, int yCoordinate) {
        var int memAddress; 
        let memAddress = SCREEN_BASE_ADDRESS + (32 * y) + Math.divide(x, 16);
        do Memory.poke(memAddress +0, -4370);
        do Memory.poke(memAddress +32, -4370);
        do Memory.poke(memAddress +64, -4370);
        do Memory.poke(memAddress +128, -17477);
        do Memory.poke(memAddress +160, -17477);
        do Memory.poke(memAddress +192, -17477);
        do Memory.poke(memAddress +256, -4370);
        do Memory.poke(memAddress +288, -4370);
        do Memory.poke(memAddress +320, -4370);
        do Memory.poke(memAddress +384, -17477);
        do Memory.poke(memAddress +416, -17477);
        do Memory.poke(memAddress +448, -17477);
        return;
    }

        /** Draws Black Terrain */
    method void drawBlackTerrain(int xCoordinate, int yCoordinate) {
	    var int memAddress; 
        let memAddress = SCREEN_BASE_ADDRESS + (32 * y) + Math.divide(x, 16);
        do Memory.poke(memAddress +0, -1);
        do Memory.poke(memAddress +32, 4369);
        do Memory.poke(memAddress +64, 4369);
        do Memory.poke(memAddress +96, 4369);
        do Memory.poke(memAddress +128, -1);
        do Memory.poke(memAddress +160, 17476);
        do Memory.poke(memAddress +192, 17476);
        do Memory.poke(memAddress +224, 17476);
        do Memory.poke(memAddress +256, -1);
        do Memory.poke(memAddress +288, 4369);
        do Memory.poke(memAddress +320, 4369);
        do Memory.poke(memAddress +352, 4369);
        do Memory.poke(memAddress +384, -1);
        do Memory.poke(memAddress +416, 17476);
        do Memory.poke(memAddress +448, 17476);
        do Memory.poke(memAddress +480, 17476);
        return;
    }
        /** Draws Immovable1 */
    method void drawImmovable1(int xCoordinate, int yCoordinate) {
        var int memAddress; 
        let memAddress = SCREEN_BASE_ADDRESS + (32 * y) + Math.divide(x, 16);
        do Memory.poke(memAddress +0, 255);
        do Memory.poke(memAddress +32, 24825);
        do Memory.poke(memAddress +64, 28913);
        do Memory.poke(memAddress +96, 14563);
        do Memory.poke(memAddress +128, 7367);
        do Memory.poke(memAddress +160, 3727);
        do Memory.poke(memAddress +192, 1823);
        do Memory.poke(memAddress +224, 831);
        do Memory.poke(memAddress +256, -832);
        do Memory.poke(memAddress +288, -1824);
        do Memory.poke(memAddress +320, -3728);
        do Memory.poke(memAddress +352, -7368);
        do Memory.poke(memAddress +384, -14564);
        do Memory.poke(memAddress +416, -28914);
        do Memory.poke(memAddress +448, -24826);
        do Memory.poke(memAddress +480, -256);
        return;
    }

        /** Draws Immovable2 */
    method void drawImmovable2(int xCoordinate, int yCoordinate) {
        var int memAddress; 
        let memAddress = SCREEN_BASE_ADDRESS + (32 * y) + Math.divide(x, 16);
        do Memory.poke(memAddress +0, -256);
        do Memory.poke(memAddress +32, -24826);
        do Memory.poke(memAddress +64, -28914);
        do Memory.poke(memAddress +96, -14564);
        do Memory.poke(memAddress +128, -7368);
        do Memory.poke(memAddress +160, -3728);
        do Memory.poke(memAddress +192, -1824);
        do Memory.poke(memAddress +224, -832);
        do Memory.poke(memAddress +256, 831);
        do Memory.poke(memAddress +288, 1823);
        do Memory.poke(memAddress +320, 3727);
        do Memory.poke(memAddress +352, 7367);
        do Memory.poke(memAddress +384, 14563);
        do Memory.poke(memAddress +416, 28913);
        do Memory.poke(memAddress +448, 24825);
        do Memory.poke(memAddress +480, 255);
        return;
    }

        /** Draws WhiteGoal */
    method void drawWhiteGoal(int xCoordinate, int yCoordinate) {
        var int memAddress; 
        let memAddress = SCREEN_BASE_ADDRESS + (32 * y) + Math.divide(x, 16);
        do Memory.poke(memAddress +0, 4094);
        do Memory.poke(memAddress +32, 4097);
        do Memory.poke(memAddress +64, 10226);
        do Memory.poke(memAddress +96, 16388);
        do Memory.poke(memAddress +128, -24632);
        do Memory.poke(memAddress +160, -32752);
        do Memory.poke(memAddress +192, -16);
        do Memory.poke(memAddress +224, -32744);
        do Memory.poke(memAddress +256, -16372);
        do Memory.poke(memAddress +288, 24582);
        do Memory.poke(memAddress +320, 12291);
        do Memory.poke(memAddress +352, 8191);
        return;
    }

            /** Draws BlackGoal */
    method void drawBlackGoal(int xCoordinate, int yCoordinate) {
        var int memAddress; 
        let memAddress = SCREEN_BASE_ADDRESS + (32 * y) + Math.divide(x, 16);
        do Memory.poke(memAddress +0, -1);
        do Memory.poke(memAddress +32, -1);
        do Memory.poke(memAddress +64, -4095);
        do Memory.poke(memAddress +96, -4098);
        do Memory.poke(memAddress +128, -10227);
        do Memory.poke(memAddress +160, -16389);
        do Memory.poke(memAddress +192, 24631);
        do Memory.poke(memAddress +224, 32751);
        do Memory.poke(memAddress +256, 15);
        do Memory.poke(memAddress +288, 32743);
        do Memory.poke(memAddress +320, 16371);
        do Memory.poke(memAddress +352, -24583);
        do Memory.poke(memAddress +384, -12292);
        do Memory.poke(memAddress +416, -8192);
        do Memory.poke(memAddress +448, -1);
        do Memory.poke(memAddress +480, -1);
        return;
    }


}
class Control {
	static int key;
	static int blackPlayerX, blackPlayerY;
	static int whitePlayerX, whitePlayerY;
	static int blackPlayerSX, blackPlayerSY;
	static int whitePlayerSX, whitePlayerSY;
	static Array map, initialMap;
	static String tmp;

	function void init(int bsx, int bsy, int wsx, int wsy) {
		let blackPlayerSX = bsx;
		let blackPlayerSY = bsy;
		let whitePlayerSX = wsx;
		let whitePlayerSY = wsy;
		let initialMap = Levels.getTutorial1Map();
		do Control.reset();
		return;
	}

	function void reset() {
		let blackPlayerX = blackPlayerSX;
		let blackPlayerY = blackPlayerSY;
		let whitePlayerX = whitePlayerSX;
		let whitePlayerY = whitePlayerSY;
		let map = initialMap;
		return;
	}

	function void draw() {
		do Graphics.drawBlackPlayer(blackPlayerX, blackPlayerY);
		do Graphics.drawWhitePlayer(whitePlayerX, whitePlayerY);
		return;
	}

	function void undraw() {
		let tmp = map[blackPlayerY];
		do Graphics.drawBlock(tmp.charAt(blackPlayerX), blackPlayerX, blackPlayerY);
		let tmp = map[whitePlayerY];
		do Graphics.drawBlock(tmp.charAt(whitePlayerX), whitePlayerX, whitePlayerY);
		return;
	}

	function boolean validWhite(int x, int y) {
		if (~((-1 < x) & (x < 32) & (-1 < y) & (y < 16))) {
			return false;
		}
		let tmp = map[y];
		return (tmp.charAt(x) = 65);
	}
	function boolean validBlack(int x, int y) {
		if (~((-1 < x) & (x < 32) & (-1 < y) & (y < 16))) {
			return false;
		}
		let tmp = map[y];
		return (tmp.charAt(x) = 66);
	}

	function int move() {
		while (~(key = 0)) {
			let key = Keyboard.keyPressed();
		}
		// Maybe only exit loop when key is useful?
		while (key = 0) {
			let key = Keyboard.keyPressed();
		}

		// Q: quit
		if (key = 81) {
			return 1;
		}

		do Control.undraw();

		// R: reset position
		if (key = 82) {
			do Control.reset();
		}

		// WASD:  87  65  83  68
		// ULDR: 131 130 133 132

		// Black Player: WASD
		if ((key = 87) & Control.validBlack(blackPlayerX, blackPlayerY - 1)) {
			let blackPlayerY = blackPlayerY - 1;
		}
		if ((key = 65) & Control.validBlack(blackPlayerX - 1, blackPlayerY)) {
			let blackPlayerX = blackPlayerX - 1;
		}
		if ((key = 83) & Control.validBlack(blackPlayerX, blackPlayerY + 1)) {
			let blackPlayerY = blackPlayerY + 1;
		}
		if ((key = 68) & Control.validBlack(blackPlayerX + 1, blackPlayerY)) {
			let blackPlayerX = blackPlayerX + 1;
		}

		// White Player: Arrow ULDR
		if ((key = 131) & Control.validWhite(whitePlayerX, whitePlayerY - 1)) {
			let whitePlayerY = whitePlayerY - 1;
		}
		if ((key = 130) & Control.validWhite(whitePlayerX - 1, whitePlayerY)) {
			let whitePlayerX = whitePlayerX - 1;
		}
		if ((key = 133) & Control.validWhite(whitePlayerX, whitePlayerY + 1)) {
			let whitePlayerY = whitePlayerY + 1;
		}
		if ((key = 132) & Control.validWhite(whitePlayerX + 1, whitePlayerY)) {
			let whitePlayerX = whitePlayerX + 1;
		}

		do Control.draw();

		// do Output.printString("(");
		// do Output.printInt(blackPlayerX);
		// do Output.printString(", ");
		// do Output.printInt(blackPlayerY);
		// do Output.printString("), (");
		// do Output.printInt(whitePlayerX);
		// do Output.printString(", ");
		// do Output.printInt(whitePlayerY);
		// do Output.printString(")");
		// do Output.println();
		return 0;
	}
}

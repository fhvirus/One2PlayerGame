class Control {
	static int key, level;
	static int blackPlayerX, blackPlayerY;
	static int whitePlayerX, whitePlayerY;
	static int blackPlayerSX, blackPlayerSY;
	static int whitePlayerSX, whitePlayerSY;
	static Array map;
	static String tmp;

	function void init(int bsx, int bsy, int wsx, int wsy, int lvl) {
		let blackPlayerSX = bsx;
		let blackPlayerSY = bsy;
		let whitePlayerSX = wsx;
		let whitePlayerSY = wsy;
		let level = lvl;
		let map = Array.new(16);
		do Control.reset();
		return;
	}

	function void reset() {
		let blackPlayerX = blackPlayerSX;
		let blackPlayerY = blackPlayerSY;
		let whitePlayerX = whitePlayerSX;
		let whitePlayerY = whitePlayerSY;
		do Levels.setMap(map, level);
		do DrawMap.DrawMap(map);
		if (~(whitePlayerX = -1)) {
			do Graphics.drawWhitePlayer(whitePlayerX, whitePlayerY);
		}
		if (~(blackPlayerX = -1)) {
			do Graphics.drawBlackPlayer(blackPlayerX, blackPlayerY);
		}
		return;
	}

	function boolean validWhite(int x, int y) {
		if (~((-1 < x) & (x < 32) & (-1 < y) & (y < 16))) {
			return false;
		}
		let tmp = map[y];
		return (tmp.charAt(x) = 65) | (tmp.charAt(x) = 67);
	}
	function boolean validBlack(int x, int y) {
		if (~((-1 < x) & (x < 32) & (-1 < y) & (y < 16))) {
			return false;
		}
		let tmp = map[y];
		return (tmp.charAt(x) = 66) | (tmp.charAt(x) = 68);
	}

	function void moveWhite(int dx, int dy) {
		var int ex, ey, br;
		if (~Control.validWhite(whitePlayerX, whitePlayerY)) {
			return;
		}

		let ex = whitePlayerX + dx;
		let ey = whitePlayerY + dy;
		if (ex = -1) {
			let ex = 31;
		}
		if (ex = 32) {
			let ex = 0;
		}
		if (ey = -1) {
			let ey = 15;
		}
		if (ey = 16) {
			let ey = 0;
		}
		let br = 0;

		while (br = 0) {
			let tmp = map[ey];
			if (tmp.charAt(ex) = 65) {
				let br = 1;
			} else {
				if (tmp.charAt(ex) = 66) {
					let ex = ex + dx;
					let ey = ey + dy;
					if (ex = -1) {
						let ex = 31;
					}
					if (ex = 32) {
						let ex = 0;
					}
					if (ey = -1) {
						let ey = 15;
					}
					if (ey = 16) {
						let ey = 0;
					}
				} else {
					let br = 2;
				}
			}
		}

		if (br = 1) {
			// undraw
			let tmp = map[whitePlayerY];
			do tmp.setCharAt(whitePlayerX, 65);
			let map[whitePlayerY] = tmp;
			do Graphics.drawBlock(65, whitePlayerX, whitePlayerY);

			// push block
			let tmp = map[ey];
			do tmp.setCharAt(ex, 66);
			do Graphics.drawBlock(66, ex, ey);
			let map[ey] = tmp;

			let whitePlayerX = whitePlayerX + dx;
			let whitePlayerY = whitePlayerY + dy;
			if (whitePlayerX = -1) {
				let whitePlayerX = 31;
			}
			if (whitePlayerX = 32) {
				let whitePlayerX = 0;
			}
			if (whitePlayerY = -1) {
				let whitePlayerY = 15;
			}
			if (whitePlayerY = 16) {
				let whitePlayerY = 0;
			}

			let tmp = map[whitePlayerY];
			do tmp.setCharAt(whitePlayerX, 65);
			do Graphics.drawBlock(65, whitePlayerX, whitePlayerY);
			let map[whitePlayerY] = tmp;

			// draw
			let tmp = map[whitePlayerY];
			do tmp.setCharAt(whitePlayerX, 67);
			let map[whitePlayerY] = tmp;
			do Output.moveCursor(0, 0);
			do Output.printString(map[whitePlayerY]);
			do Graphics.drawWhitePlayer(whitePlayerX, whitePlayerY);
		}
		return;
	}

	function void moveBlack(int dx, int dy) {
		var int ex, ey, br;
		if (~Control.validBlack(blackPlayerX, blackPlayerY)) {
			return;
		}

		let ex = blackPlayerX + dx;
		let ey = blackPlayerY + dy;
		if (ex = -1) {
			let ex = 31;
		}
		if (ex = 32) {
			let ex = 0;
		}
		if (ey = -1) {
			let ey = 15;
		}
		if (ey = 16) {
			let ey = 0;
		}
		let br = 0;

		while (br = 0) {
			let tmp = map[ey];
			if (tmp.charAt(ex) = 65) {
				let br = 1;
			} else {
				if (tmp.charAt(ex) = 66) {
					let ex = ex + dx;
					let ey = ey + dy;
					if (ex = -1) {
						let ex = 31;
					}
					if (ex = 32) {
						let ex = 0;
					}
					if (ey = -1) {
						let ey = 15;
					}
					if (ey = 16) {
						let ey = 0;
					}
				} else {
					let br = 2;
				}
			}
		}

		if (br = 1) {
			// undraw
			let tmp = map[blackPlayerY];
			do tmp.setCharAt(blackPlayerX, 65);
			let map[blackPlayerY] = tmp;
			do Graphics.drawBlock(65, blackPlayerX, blackPlayerY);

			// push block
			let tmp = map[ey];
			do tmp.setCharAt(ex, 66);
			do Graphics.drawBlock(66, ex, ey);
			let map[ey] = tmp;

			let blackPlayerX = blackPlayerX + dx;
			let blackPlayerY = blackPlayerY + dy;
			if (blackPlayerX = -1) {
				let blackPlayerX = 31;
			}
			if (blackPlayerX = 32) {
				let blackPlayerX = 0;
			}
			if (blackPlayerY = -1) {
				let blackPlayerY = 15;
			}
			if (blackPlayerY = 16) {
				let blackPlayerY = 0;
			}

			let tmp = map[blackPlayerY];
			do tmp.setCharAt(blackPlayerX, 65);
			do Graphics.drawBlock(65, blackPlayerX, blackPlayerY);
			let map[blackPlayerY] = tmp;

			// draw
			let tmp = map[blackPlayerY];
			do tmp.setCharAt(blackPlayerX, 67);
			let map[blackPlayerY] = tmp;
			do Output.moveCursor(0, 0);
			do Output.printString(map[blackPlayerY]);
			do Graphics.drawBlackPlayer(blackPlayerX, blackPlayerY);
		}
		return;
	}

	function int move() {
		while (~(key = 0)) {
			let key = Keyboard.keyPressed();
		}
		// Maybe only exit loop when key is useful?
		while (key = 0) {
			let key = Keyboard.keyPressed();
		}

		// Q: quit
		if (key = 81) {
			return 1;
		}

		// R: reset position
		if (key = 82) {
			do Control.reset();
		}

		// WASD:  87  65  83  68
		// ULDR: 131 130 133 132

		// White Player: Arrow ULDR
		if (key = 131) {
			do Control.moveWhite(0, -1);
		}
		if (key = 130) {
			do Control.moveWhite(-1, 0);
		}
		if (key = 133) {
			do Control.moveWhite(0, 1);
		}
		if (key = 132) {
			do Control.moveWhite(1, 0);
		}

		// Black Player: WASD
		if (key = 87) {
			do Control.moveBlack(0, -1);
		}
		if (key = 65) {
			do Control.moveBlack(-1, 0);
		}
		if (key = 83) {
			do Control.moveBlack(0, 1);
		}
		if (key = 68) {
			do Control.moveBlack(1, 0);
		}

		// do Output.printString("(");
		// do Output.printInt(blackPlayerX);
		// do Output.printString(", ");
		// do Output.printInt(blackPlayerY);
		// do Output.printString("), (");
		// do Output.printInt(whitePlayerX);
		// do Output.printString(", ");
		// do Output.printInt(whitePlayerY);
		// do Output.printString(")");
		// do Output.println();
		return 0;
	}
}
